Полное руководство: Установка Nextcloud на RedOS с Nginx и MySQL
Шаг 1: Предварительная подготовка системы
Обновите систему:
bash
Копировать код
sudo dnf update -y
Установите необходимые пакеты:
bash
Копировать код
sudo dnf install -y nginx mariadb-server mariadb php php-fpm php-mysqlnd php-xml php-gd php-mbstring php-intl php-curl php-zip wget policycoreutils-python-utils
Запустите службы и добавьте их в автозагрузку:
bash
Копировать код
sudo systemctl enable --now nginx mariadb php-fpm
Шаг 2: Настройка MySQL
Инициализация MariaDB:
bash
Копировать код
sudo mysql_secure_installation
В процессе настройки:

Установите пароль root.
Удалите анонимных пользователей.
Отключите удаленный доступ для root.
Удалите тестовую базу данных.
Примите изменения.
Создайте базу данных и пользователя:
bash
Копировать код
sudo mysql -u root -p
В MySQL выполните следующие команды:

sql
Копировать код
CREATE DATABASE nextcloud CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
CREATE USER 'nextclouduser'@'localhost' IDENTIFIED BY 'secure_password';
GRANT ALL PRIVILEGES ON nextcloud.* TO 'nextclouduser'@'localhost';
FLUSH PRIVILEGES;
EXIT;
Шаг 3: Настройка PHP
Откройте файл конфигурации PHP-FPM:
bash
Копировать код
sudo nano /etc/php-fpm.d/www.conf
Убедитесь в правильных настройках:
Задайте пользователя и группу:
ini
Копировать код
user = nginx
group = nginx
Настройте сокет:
ini
Копировать код
listen = /run/php-fpm/www.sock
listen.owner = nginx
listen.group = nginx
listen.mode = 0660
Сохраните изменения и перезапустите PHP-FPM:

bash
Копировать код
sudo systemctl restart php-fpm
Шаг 4: Настройка Nginx
Создайте конфигурацию для Nextcloud:
bash
Копировать код
sudo nano /etc/nginx/conf.d/nextcloud.conf
Вставьте следующее содержимое:

nginx
Копировать код
server {
    listen 80;
    server_name localhost;

    root /var/www/nextcloud;
    index index.php index.html;

    client_max_body_size 512M;
    fastcgi_buffers 64 4K;

    location / {
        try_files $uri $uri/ /index.php;
    }

    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/run/php-fpm/www.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    location ~ /\.ht {
        deny all;
    }
}
Перезапустите Nginx:
bash
Копировать код
sudo systemctl restart nginx
Шаг 5: Установка Nextcloud
Скачайте и распакуйте Nextcloud:
bash
Копировать код
wget https://download.nextcloud.com/server/releases/latest.tar.bz2
tar -xjf latest.tar.bz2
sudo mv nextcloud /var/www/
Настройте права доступа:
bash
Копировать код
sudo chown -R nginx:nginx /var/www/nextcloud
sudo chmod -R 755 /var/www/nextcloud
Шаг 6: Настройка безопасности
Настройте SELinux:
bash
Копировать код
sudo semanage fcontext -a -t httpd_sys_rw_content_t '/var/www/nextcloud(/.*)?'
sudo restorecon -R /var/www/nextcloud
Настройте файрвол:
bash
Копировать код
sudo firewall-cmd --permanent --add-service=http
sudo firewall-cmd --permanent --add-service=https
sudo firewall-cmd --reload
Шаг 7: Оптимизация PHP
Включите opcache:
Откройте файл конфигурации opcache:

bash
Копировать код
sudo nano /etc/php.d/10-opcache.ini
Добавьте или измените:

ini
Копировать код
opcache.enable=1
opcache.enable_cli=1
opcache.memory_consumption=128
opcache.interned_strings_buffer=8
opcache.max_accelerated_files=10000
opcache.revalidate_freq=1
opcache.save_comments=1
Перезапустите PHP-FPM:

bash
Копировать код
sudo systemctl restart php-fpm
Шаг 8: Завершение настройки Nextcloud
Перейдите в браузере на адрес сервера:
http://<ваш_IP_или_домен>

Заполните форму:

Укажите данные для базы данных:
Имя базы данных: nextcloud
Имя пользователя: nextclouduser
Пароль: secure_password
Укажите путь к данным (по умолчанию: /var/www/nextcloud/data).
Нажмите кнопку для завершения установки.

Теперь ваш Nextcloud настроен и готов к использованию на базе Nginx и MySQL в RedOS! Если что-то пойдет не так, сообщите, и я помогу.
